# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  aws-cli: circleci/aws-cli@2.0

jobs:
  Lint-js-files:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run: |
          npm install
          npm audit 
          npm run lint

  Create-db-infrastructure:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup:
          aws-access-key-id: Access_key
          aws-secret-access-key: Secret_key
          aws-region: region

      - run:
          name: "Creating db on AWS"
          command: |
           aws cloudformation create-stack \
            --stack-name web-server-db-$CIRCLE_WORKFLOW_ID \
            --template-body file://db-infrastructure.yml \
            --capabilities "CAPABILITY_IAM" "CAPABILITY_NAMED_IAM" \
            --region=us-east-1

      - run:
          name: "Waiting for server to come up"
          command: |
           echo "Waiting for 60 seconds for server to come up"
           sleep 60s

      - run:
          name: "Getting deployed instance dns"
          command: |
           aws ec2 describe-instances \
            --filters Name=tag:aws:cloudformation:stack-name,Values=web-server-db-$CIRCLE_WORKFLOW_ID \
            --query "Reservations[].Instances[].PublicDnsName" \
            --region=$region | tail -n 2| head -n 1 | tee db_dns.txt # get last deployed dns, append to file and also display on stdout
           sed -i 's/"\|  //g' db_dns.txt # format content of file by stripping unwanted characters (spaces and quotation marks)
                 
      - save_cache:
          key: db_dns-$CIRCLE_WORKFLOW_ID
          paths:
            - ./db_dns.txt

  Install-MongoDb:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - restore_cache:
          key: db_dns-$CIRCLE_WORKFLOW_ID
      - run: | 
          echo [db] > inventory
          cat /home/circleci/project/db_dns.txt >> inventory
          mkdir -p ./roles/mongodb/files
          cp inventory ./roles/mongodb/files
      - add_ssh_keys:
          fingerprints: [cb:0e:fb:d8:4d:32:f3:6e:48:85:93:81:58:ea:c0:ca]
      - run: 
          name: "install ansible"
          command: |
            apk add --update ansible
            ansible-playbook main.yml -i inventory --private-key=$fingerprints




# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build-workflow:
    jobs:
      - Lint-js-files
      - Create-db-infrastructure:
          requires:
            - Lint-js-files
      - Install-MongoDb:
          requires:
            - Create-db-infrastructure